
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EQUALS FLOAT FNUMBER ID INT LPAREN NEWLINE NUMBER PRINT RPAREN STR STRINGprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : declaration\n                 | assignment\n                 | print_statementdeclaration : type ID EQUALS expression NEWLINEassignment : ID EQUALS expression NEWLINEprint_statement : PRINT LPAREN expression RPAREN NEWLINEtype : INT\n            | FLOAT\n            | STRexpression : NUMBER\n                  | FNUMBER\n                  | STRING\n                  | ID'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,10,11,12,13,15,16,17,25,27,28,],[8,8,-2,-4,-5,-6,14,-10,-11,-12,-3,18,18,18,-8,-7,-9,]),'PRINT':([0,2,3,4,5,6,13,25,27,28,],[9,9,-2,-4,-5,-6,-3,-8,-7,-9,]),'INT':([0,2,3,4,5,6,13,25,27,28,],[10,10,-2,-4,-5,-6,-3,-8,-7,-9,]),'FLOAT':([0,2,3,4,5,6,13,25,27,28,],[11,11,-2,-4,-5,-6,-3,-8,-7,-9,]),'STR':([0,2,3,4,5,6,13,25,27,28,],[12,12,-2,-4,-5,-6,-3,-8,-7,-9,]),'$end':([1,2,3,4,5,6,13,25,27,28,],[0,-1,-2,-4,-5,-6,-3,-8,-7,-9,]),'EQUALS':([8,14,],[15,17,]),'LPAREN':([9,],[16,]),'NUMBER':([15,16,17,],[20,20,20,]),'FNUMBER':([15,16,17,],[21,21,21,]),'STRING':([15,16,17,],[22,22,22,]),'NEWLINE':([18,19,20,21,22,24,26,],[-16,25,-13,-14,-15,27,28,]),'RPAREN':([18,20,21,22,23,],[-16,-13,-14,-15,26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'statement':([0,2,],[3,13,]),'declaration':([0,2,],[4,4,]),'assignment':([0,2,],[5,5,]),'print_statement':([0,2,],[6,6,]),'type':([0,2,],[7,7,]),'expression':([15,16,17,],[19,23,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','entrada_saida.py',9),
  ('statement_list -> statement','statement_list',1,'p_statement_list','entrada_saida.py',13),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','entrada_saida.py',14),
  ('statement -> declaration','statement',1,'p_statement','entrada_saida.py',21),
  ('statement -> assignment','statement',1,'p_statement','entrada_saida.py',22),
  ('statement -> print_statement','statement',1,'p_statement','entrada_saida.py',23),
  ('declaration -> type ID EQUALS expression NEWLINE','declaration',5,'p_declaration','entrada_saida.py',27),
  ('assignment -> ID EQUALS expression NEWLINE','assignment',4,'p_assignment','entrada_saida.py',31),
  ('print_statement -> PRINT LPAREN expression RPAREN NEWLINE','print_statement',5,'p_print_statement','entrada_saida.py',35),
  ('type -> INT','type',1,'p_type','entrada_saida.py',39),
  ('type -> FLOAT','type',1,'p_type','entrada_saida.py',40),
  ('type -> STR','type',1,'p_type','entrada_saida.py',41),
  ('expression -> NUMBER','expression',1,'p_expression','entrada_saida.py',45),
  ('expression -> FNUMBER','expression',1,'p_expression','entrada_saida.py',46),
  ('expression -> STRING','expression',1,'p_expression','entrada_saida.py',47),
  ('expression -> ID','expression',1,'p_expression','entrada_saida.py',48),
]
