
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA DIF EQUALS FALSE FOR GT ID IN INT LBRACKET LPAREN LT MATHEQUALS NEWLINE NUMBER OR PLUS PRINT RANGE RBRACKET RPAREN STRING TRUE WHILEprogram : statement_liststatement_list : statement NEWLINE\n                      | statement_list statement NEWLINEstatement : for_statement\n                 | while_statement\n                 | print_statement\n                 | assignment_statementassignment_statement : ID EQUALS conditioncondition : expression comparison_operator expression\n                 | condition logical_operator condition\n                 | TRUE\n                 | FALSEcomparison_operator : LT\n                           | GT\n                           | PLUS\n                           | MATHEQUALS\n                           | DIFexpression : NUMBER\n                  | STRING\n                  | IDlogical_operator : AND\n                        | ORfor_statement : FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE\n              | FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE\n              | FOR INT ID IN ID LBRACKET statement_list RBRACKET NEWLINEwhile_statement : WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINEprint_statement : PRINT LPAREN expression RPAREN NEWLINE'
    
_lr_action_items = {'FOR':([0,2,13,18,47,49,50,52,64,66,67,69,],[8,8,-2,-3,8,8,8,8,8,8,8,8,]),'WHILE':([0,2,13,18,47,49,50,52,64,66,67,69,],[10,10,-2,-3,10,10,10,10,10,10,10,10,]),'PRINT':([0,2,13,18,47,49,50,52,64,66,67,69,],[11,11,-2,-3,11,11,11,11,11,11,11,11,]),'ID':([0,2,13,14,15,16,17,18,29,30,31,32,33,34,35,36,37,38,47,49,50,52,64,66,67,69,],[9,9,-2,19,20,20,20,-3,41,20,-21,-22,20,-13,-14,-15,-16,-17,9,9,9,9,9,9,9,9,]),'$end':([1,2,13,18,],[0,-1,-2,-3,]),'NEWLINE':([3,4,5,6,7,12,20,21,23,24,25,26,40,43,44,45,46,53,55,56,58,62,65,68,70,71,72,],[13,-4,-5,-6,-7,18,-20,-8,-11,-12,-18,-19,46,-10,-9,49,-27,56,58,-25,-26,64,67,70,-24,72,-23,]),'INT':([8,],[14,]),'EQUALS':([9,],[15,]),'LPAREN':([10,11,42,],[16,17,48,]),'RBRACKET':([13,18,50,52,66,69,],[-2,-3,53,55,68,71,]),'TRUE':([15,16,30,31,32,],[23,23,23,-21,-22,]),'FALSE':([15,16,30,31,32,],[24,24,24,-21,-22,]),'NUMBER':([15,16,17,30,31,32,33,34,35,36,37,38,48,54,59,],[25,25,25,25,-21,-22,25,-13,-14,-15,-16,-17,51,57,61,]),'STRING':([15,16,17,30,31,32,33,34,35,36,37,38,],[26,26,26,26,-21,-22,26,-13,-14,-15,-16,-17,]),'IN':([19,],[29,]),'LT':([20,22,25,26,],[-20,34,-18,-19,]),'GT':([20,22,25,26,],[-20,35,-18,-19,]),'PLUS':([20,22,25,26,],[-20,36,-18,-19,]),'MATHEQUALS':([20,22,25,26,],[-20,37,-18,-19,]),'DIF':([20,22,25,26,],[-20,38,-18,-19,]),'RPAREN':([20,23,24,25,26,27,28,43,44,57,61,],[-20,-11,-12,-18,-19,39,40,-10,-9,60,63,]),'AND':([20,21,23,24,25,26,27,43,44,],[-20,31,-11,-12,-18,-19,31,31,-9,]),'OR':([20,21,23,24,25,26,27,43,44,],[-20,32,-11,-12,-18,-19,32,32,-9,]),'RANGE':([29,],[42,]),'LBRACKET':([39,41,60,63,],[45,47,62,65,]),'COMMA':([51,57,],[54,59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,47,49,64,67,],[2,50,52,66,69,]),'statement':([0,2,47,49,50,52,64,66,67,69,],[3,12,3,3,12,12,3,12,3,12,]),'for_statement':([0,2,47,49,50,52,64,66,67,69,],[4,4,4,4,4,4,4,4,4,4,]),'while_statement':([0,2,47,49,50,52,64,66,67,69,],[5,5,5,5,5,5,5,5,5,5,]),'print_statement':([0,2,47,49,50,52,64,66,67,69,],[6,6,6,6,6,6,6,6,6,6,]),'assignment_statement':([0,2,47,49,50,52,64,66,67,69,],[7,7,7,7,7,7,7,7,7,7,]),'condition':([15,16,30,],[21,27,43,]),'expression':([15,16,17,30,33,],[22,22,28,22,44,]),'logical_operator':([21,27,43,],[30,30,30,]),'comparison_operator':([22,],[33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','repeticao.py',10),
  ('statement_list -> statement NEWLINE','statement_list',2,'p_statement_list','repeticao.py',14),
  ('statement_list -> statement_list statement NEWLINE','statement_list',3,'p_statement_list','repeticao.py',15),
  ('statement -> for_statement','statement',1,'p_statement','repeticao.py',22),
  ('statement -> while_statement','statement',1,'p_statement','repeticao.py',23),
  ('statement -> print_statement','statement',1,'p_statement','repeticao.py',24),
  ('statement -> assignment_statement','statement',1,'p_statement','repeticao.py',25),
  ('assignment_statement -> ID EQUALS condition','assignment_statement',3,'p_assignment_statement','repeticao.py',29),
  ('condition -> expression comparison_operator expression','condition',3,'p_condition','repeticao.py',33),
  ('condition -> condition logical_operator condition','condition',3,'p_condition','repeticao.py',34),
  ('condition -> TRUE','condition',1,'p_condition','repeticao.py',35),
  ('condition -> FALSE','condition',1,'p_condition','repeticao.py',36),
  ('comparison_operator -> LT','comparison_operator',1,'p_comparison_operator','repeticao.py',45),
  ('comparison_operator -> GT','comparison_operator',1,'p_comparison_operator','repeticao.py',46),
  ('comparison_operator -> PLUS','comparison_operator',1,'p_comparison_operator','repeticao.py',47),
  ('comparison_operator -> MATHEQUALS','comparison_operator',1,'p_comparison_operator','repeticao.py',48),
  ('comparison_operator -> DIF','comparison_operator',1,'p_comparison_operator','repeticao.py',49),
  ('expression -> NUMBER','expression',1,'p_expression','repeticao.py',53),
  ('expression -> STRING','expression',1,'p_expression','repeticao.py',54),
  ('expression -> ID','expression',1,'p_expression','repeticao.py',55),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','repeticao.py',59),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','repeticao.py',60),
  ('for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE','for_statement',17,'p_for_statement','repeticao.py',65),
  ('for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE','for_statement',15,'p_for_statement','repeticao.py',66),
  ('for_statement -> FOR INT ID IN ID LBRACKET statement_list RBRACKET NEWLINE','for_statement',9,'p_for_statement','repeticao.py',67),
  ('while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE','while_statement',9,'p_while_statement','repeticao.py',76),
  ('print_statement -> PRINT LPAREN expression RPAREN NEWLINE','print_statement',5,'p_print_statement','repeticao.py',80),
]
