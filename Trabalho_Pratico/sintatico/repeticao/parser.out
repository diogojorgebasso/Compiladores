Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> for_statement
Rule 5     statement -> while_statement
Rule 6     statement -> print_statement
Rule 7     statement -> assignment_statement
Rule 8     assignment_statement -> ID EQUALS condition NEWLINE
Rule 9     condition -> expression comparison_operator expression
Rule 10    condition -> condition logical_operator condition
Rule 11    condition -> ID comparison_operator ID
Rule 12    comparison_operator -> LT
Rule 13    comparison_operator -> GT
Rule 14    comparison_operator -> PLUS
Rule 15    comparison_operator -> MATHEQUALS
Rule 16    comparison_operator -> DIF
Rule 17    expression -> NUMBER
Rule 18    expression -> STRING
Rule 19    expression -> ID
Rule 20    logical_operator -> AND
Rule 21    logical_operator -> OR
Rule 22    for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
Rule 23    for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
Rule 24    for_statement -> FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
Rule 25    while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
Rule 26    while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
Rule 27    print_statement -> PRINT LPAREN ID RPAREN NEWLINE
Rule 28    print_statement -> PRINT LPAREN STRING RPAREN NEWLINE

Terminals, with rules where they appear

AND                  : 20
COMMA                : 22 22 23
DIF                  : 16
EQUALS               : 8
FALSE                : 
FOR                  : 22 23 24
GT                   : 13
ID                   : 8 11 11 19 22 23 24 27
IN                   : 22 23
INT                  : 22 23 24
LBRACKET             : 22 23 24 25 26
LPAREN               : 22 23 25 26 27 28
LT                   : 12
MATHEQUALS           : 15
NEWLINE              : 8 22 22 23 23 24 24 25 25 26 26 27 28
NUMBER               : 17 22 22 22 23 23
OR                   : 21
PLUS                 : 14
PRINT                : 27 28
RANGE                : 22 23
RBRACKET             : 22 23 24 25 26
RPAREN               : 22 23 25 26 27 28
STRING               : 18 28
TRUE                 : 26
WHILE                : 25 26
error                : 

Nonterminals, with rules where they appear

assignment_statement : 7 23
comparison_operator  : 9 11
condition            : 8 10 10 25
expression           : 9 9
for_statement        : 4
logical_operator     : 10
print_statement      : 6
program              : 0
statement            : 2 3
statement_list       : 1 3 22 24 25 26
while_statement      : 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    $end            reduce using rule 1 (program -> statement_list .)
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    statement                      shift and go to state 12
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 3

    (2) statement_list -> statement .

    FOR             reduce using rule 2 (statement_list -> statement .)
    WHILE           reduce using rule 2 (statement_list -> statement .)
    PRINT           reduce using rule 2 (statement_list -> statement .)
    ID              reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACKET        reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> for_statement .

    FOR             reduce using rule 4 (statement -> for_statement .)
    WHILE           reduce using rule 4 (statement -> for_statement .)
    PRINT           reduce using rule 4 (statement -> for_statement .)
    ID              reduce using rule 4 (statement -> for_statement .)
    $end            reduce using rule 4 (statement -> for_statement .)
    RBRACKET        reduce using rule 4 (statement -> for_statement .)


state 5

    (5) statement -> while_statement .

    FOR             reduce using rule 5 (statement -> while_statement .)
    WHILE           reduce using rule 5 (statement -> while_statement .)
    PRINT           reduce using rule 5 (statement -> while_statement .)
    ID              reduce using rule 5 (statement -> while_statement .)
    $end            reduce using rule 5 (statement -> while_statement .)
    RBRACKET        reduce using rule 5 (statement -> while_statement .)


state 6

    (6) statement -> print_statement .

    FOR             reduce using rule 6 (statement -> print_statement .)
    WHILE           reduce using rule 6 (statement -> print_statement .)
    PRINT           reduce using rule 6 (statement -> print_statement .)
    ID              reduce using rule 6 (statement -> print_statement .)
    $end            reduce using rule 6 (statement -> print_statement .)
    RBRACKET        reduce using rule 6 (statement -> print_statement .)


state 7

    (7) statement -> assignment_statement .

    FOR             reduce using rule 7 (statement -> assignment_statement .)
    WHILE           reduce using rule 7 (statement -> assignment_statement .)
    PRINT           reduce using rule 7 (statement -> assignment_statement .)
    ID              reduce using rule 7 (statement -> assignment_statement .)
    $end            reduce using rule 7 (statement -> assignment_statement .)
    RBRACKET        reduce using rule 7 (statement -> assignment_statement .)


state 8

    (22) for_statement -> FOR . INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> FOR . INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> FOR . INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    INT             shift and go to state 13


state 9

    (8) assignment_statement -> ID . EQUALS condition NEWLINE

    EQUALS          shift and go to state 14


state 10

    (25) while_statement -> WHILE . LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> WHILE . LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    LPAREN          shift and go to state 15


state 11

    (27) print_statement -> PRINT . LPAREN ID RPAREN NEWLINE
    (28) print_statement -> PRINT . LPAREN STRING RPAREN NEWLINE

    LPAREN          shift and go to state 16


state 12

    (3) statement_list -> statement_list statement .

    FOR             reduce using rule 3 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 3 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 3 (statement_list -> statement_list statement .)
    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACKET        reduce using rule 3 (statement_list -> statement_list statement .)


state 13

    (22) for_statement -> FOR INT . ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> FOR INT . ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> FOR INT . ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    ID              shift and go to state 17


state 14

    (8) assignment_statement -> ID EQUALS . condition NEWLINE
    (9) condition -> . expression comparison_operator expression
    (10) condition -> . condition logical_operator condition
    (11) condition -> . ID comparison_operator ID
    (17) expression -> . NUMBER
    (18) expression -> . STRING
    (19) expression -> . ID

    ID              shift and go to state 18
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22

    condition                      shift and go to state 19
    expression                     shift and go to state 20

state 15

    (25) while_statement -> WHILE LPAREN . condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> WHILE LPAREN . TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (9) condition -> . expression comparison_operator expression
    (10) condition -> . condition logical_operator condition
    (11) condition -> . ID comparison_operator ID
    (17) expression -> . NUMBER
    (18) expression -> . STRING
    (19) expression -> . ID

    TRUE            shift and go to state 24
    ID              shift and go to state 18
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22

    condition                      shift and go to state 23
    expression                     shift and go to state 20

state 16

    (27) print_statement -> PRINT LPAREN . ID RPAREN NEWLINE
    (28) print_statement -> PRINT LPAREN . STRING RPAREN NEWLINE

    ID              shift and go to state 25
    STRING          shift and go to state 26


state 17

    (22) for_statement -> FOR INT ID . IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> FOR INT ID . IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> FOR INT ID . LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    IN              shift and go to state 27
    LBRACKET        shift and go to state 28


state 18

    (11) condition -> ID . comparison_operator ID
    (19) expression -> ID .
    (12) comparison_operator -> . LT
    (13) comparison_operator -> . GT
    (14) comparison_operator -> . PLUS
    (15) comparison_operator -> . MATHEQUALS
    (16) comparison_operator -> . DIF

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MATHEQUALS resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
    LT              shift and go to state 30
    GT              shift and go to state 31
    PLUS            shift and go to state 32
    MATHEQUALS      shift and go to state 33
    DIF             shift and go to state 34

  ! LT              [ reduce using rule 19 (expression -> ID .) ]
  ! GT              [ reduce using rule 19 (expression -> ID .) ]
  ! PLUS            [ reduce using rule 19 (expression -> ID .) ]
  ! MATHEQUALS      [ reduce using rule 19 (expression -> ID .) ]
  ! DIF             [ reduce using rule 19 (expression -> ID .) ]

    comparison_operator            shift and go to state 29

state 19

    (8) assignment_statement -> ID EQUALS condition . NEWLINE
    (10) condition -> condition . logical_operator condition
    (20) logical_operator -> . AND
    (21) logical_operator -> . OR

    NEWLINE         shift and go to state 35
    AND             shift and go to state 37
    OR              shift and go to state 38

    logical_operator               shift and go to state 36

state 20

    (9) condition -> expression . comparison_operator expression
    (12) comparison_operator -> . LT
    (13) comparison_operator -> . GT
    (14) comparison_operator -> . PLUS
    (15) comparison_operator -> . MATHEQUALS
    (16) comparison_operator -> . DIF

    LT              shift and go to state 30
    GT              shift and go to state 31
    PLUS            shift and go to state 32
    MATHEQUALS      shift and go to state 33
    DIF             shift and go to state 34

    comparison_operator            shift and go to state 39

state 21

    (17) expression -> NUMBER .

    LT              reduce using rule 17 (expression -> NUMBER .)
    GT              reduce using rule 17 (expression -> NUMBER .)
    PLUS            reduce using rule 17 (expression -> NUMBER .)
    MATHEQUALS      reduce using rule 17 (expression -> NUMBER .)
    DIF             reduce using rule 17 (expression -> NUMBER .)
    NEWLINE         reduce using rule 17 (expression -> NUMBER .)
    AND             reduce using rule 17 (expression -> NUMBER .)
    OR              reduce using rule 17 (expression -> NUMBER .)
    RPAREN          reduce using rule 17 (expression -> NUMBER .)


state 22

    (18) expression -> STRING .

    LT              reduce using rule 18 (expression -> STRING .)
    GT              reduce using rule 18 (expression -> STRING .)
    PLUS            reduce using rule 18 (expression -> STRING .)
    MATHEQUALS      reduce using rule 18 (expression -> STRING .)
    DIF             reduce using rule 18 (expression -> STRING .)
    NEWLINE         reduce using rule 18 (expression -> STRING .)
    AND             reduce using rule 18 (expression -> STRING .)
    OR              reduce using rule 18 (expression -> STRING .)
    RPAREN          reduce using rule 18 (expression -> STRING .)


state 23

    (25) while_statement -> WHILE LPAREN condition . RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (10) condition -> condition . logical_operator condition
    (20) logical_operator -> . AND
    (21) logical_operator -> . OR

    RPAREN          shift and go to state 40
    AND             shift and go to state 37
    OR              shift and go to state 38

    logical_operator               shift and go to state 36

state 24

    (26) while_statement -> WHILE LPAREN TRUE . RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    RPAREN          shift and go to state 41


state 25

    (27) print_statement -> PRINT LPAREN ID . RPAREN NEWLINE

    RPAREN          shift and go to state 42


state 26

    (28) print_statement -> PRINT LPAREN STRING . RPAREN NEWLINE

    RPAREN          shift and go to state 43


state 27

    (22) for_statement -> FOR INT ID IN . RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> FOR INT ID IN . RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE

    RANGE           shift and go to state 44


state 28

    (24) for_statement -> FOR INT ID LBRACKET . NEWLINE statement_list RBRACKET NEWLINE

    NEWLINE         shift and go to state 45


state 29

    (11) condition -> ID comparison_operator . ID

    ID              shift and go to state 46


state 30

    (12) comparison_operator -> LT .

    ID              reduce using rule 12 (comparison_operator -> LT .)
    NUMBER          reduce using rule 12 (comparison_operator -> LT .)
    STRING          reduce using rule 12 (comparison_operator -> LT .)


state 31

    (13) comparison_operator -> GT .

    ID              reduce using rule 13 (comparison_operator -> GT .)
    NUMBER          reduce using rule 13 (comparison_operator -> GT .)
    STRING          reduce using rule 13 (comparison_operator -> GT .)


state 32

    (14) comparison_operator -> PLUS .

    ID              reduce using rule 14 (comparison_operator -> PLUS .)
    NUMBER          reduce using rule 14 (comparison_operator -> PLUS .)
    STRING          reduce using rule 14 (comparison_operator -> PLUS .)


state 33

    (15) comparison_operator -> MATHEQUALS .

    ID              reduce using rule 15 (comparison_operator -> MATHEQUALS .)
    NUMBER          reduce using rule 15 (comparison_operator -> MATHEQUALS .)
    STRING          reduce using rule 15 (comparison_operator -> MATHEQUALS .)


state 34

    (16) comparison_operator -> DIF .

    ID              reduce using rule 16 (comparison_operator -> DIF .)
    NUMBER          reduce using rule 16 (comparison_operator -> DIF .)
    STRING          reduce using rule 16 (comparison_operator -> DIF .)


state 35

    (8) assignment_statement -> ID EQUALS condition NEWLINE .

    FOR             reduce using rule 8 (assignment_statement -> ID EQUALS condition NEWLINE .)
    WHILE           reduce using rule 8 (assignment_statement -> ID EQUALS condition NEWLINE .)
    PRINT           reduce using rule 8 (assignment_statement -> ID EQUALS condition NEWLINE .)
    ID              reduce using rule 8 (assignment_statement -> ID EQUALS condition NEWLINE .)
    $end            reduce using rule 8 (assignment_statement -> ID EQUALS condition NEWLINE .)
    RBRACKET        reduce using rule 8 (assignment_statement -> ID EQUALS condition NEWLINE .)


state 36

    (10) condition -> condition logical_operator . condition
    (9) condition -> . expression comparison_operator expression
    (10) condition -> . condition logical_operator condition
    (11) condition -> . ID comparison_operator ID
    (17) expression -> . NUMBER
    (18) expression -> . STRING
    (19) expression -> . ID

    ID              shift and go to state 18
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22

    condition                      shift and go to state 47
    expression                     shift and go to state 20

state 37

    (20) logical_operator -> AND .

    ID              reduce using rule 20 (logical_operator -> AND .)
    NUMBER          reduce using rule 20 (logical_operator -> AND .)
    STRING          reduce using rule 20 (logical_operator -> AND .)


state 38

    (21) logical_operator -> OR .

    ID              reduce using rule 21 (logical_operator -> OR .)
    NUMBER          reduce using rule 21 (logical_operator -> OR .)
    STRING          reduce using rule 21 (logical_operator -> OR .)


state 39

    (9) condition -> expression comparison_operator . expression
    (17) expression -> . NUMBER
    (18) expression -> . STRING
    (19) expression -> . ID

    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 49

    expression                     shift and go to state 48

state 40

    (25) while_statement -> WHILE LPAREN condition RPAREN . LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    LBRACKET        shift and go to state 50


state 41

    (26) while_statement -> WHILE LPAREN TRUE RPAREN . LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    LBRACKET        shift and go to state 51


state 42

    (27) print_statement -> PRINT LPAREN ID RPAREN . NEWLINE

    NEWLINE         shift and go to state 52


state 43

    (28) print_statement -> PRINT LPAREN STRING RPAREN . NEWLINE

    NEWLINE         shift and go to state 53


state 44

    (22) for_statement -> FOR INT ID IN RANGE . LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> FOR INT ID IN RANGE . LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE

    LPAREN          shift and go to state 54


state 45

    (24) for_statement -> FOR INT ID LBRACKET NEWLINE . statement_list RBRACKET NEWLINE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    statement_list                 shift and go to state 55
    statement                      shift and go to state 3
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 46

    (11) condition -> ID comparison_operator ID .

    NEWLINE         reduce using rule 11 (condition -> ID comparison_operator ID .)
    AND             reduce using rule 11 (condition -> ID comparison_operator ID .)
    OR              reduce using rule 11 (condition -> ID comparison_operator ID .)
    RPAREN          reduce using rule 11 (condition -> ID comparison_operator ID .)


state 47

    (10) condition -> condition logical_operator condition .
    (10) condition -> condition . logical_operator condition
    (20) logical_operator -> . AND
    (21) logical_operator -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    NEWLINE         reduce using rule 10 (condition -> condition logical_operator condition .)
    RPAREN          reduce using rule 10 (condition -> condition logical_operator condition .)
    AND             shift and go to state 37
    OR              shift and go to state 38

  ! AND             [ reduce using rule 10 (condition -> condition logical_operator condition .) ]
  ! OR              [ reduce using rule 10 (condition -> condition logical_operator condition .) ]

    logical_operator               shift and go to state 36

state 48

    (9) condition -> expression comparison_operator expression .

    NEWLINE         reduce using rule 9 (condition -> expression comparison_operator expression .)
    AND             reduce using rule 9 (condition -> expression comparison_operator expression .)
    OR              reduce using rule 9 (condition -> expression comparison_operator expression .)
    RPAREN          reduce using rule 9 (condition -> expression comparison_operator expression .)


state 49

    (19) expression -> ID .

    NEWLINE         reduce using rule 19 (expression -> ID .)
    AND             reduce using rule 19 (expression -> ID .)
    OR              reduce using rule 19 (expression -> ID .)
    RPAREN          reduce using rule 19 (expression -> ID .)


state 50

    (25) while_statement -> WHILE LPAREN condition RPAREN LBRACKET . NEWLINE statement_list RBRACKET NEWLINE

    NEWLINE         shift and go to state 56


state 51

    (26) while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET . NEWLINE statement_list RBRACKET NEWLINE

    NEWLINE         shift and go to state 57


state 52

    (27) print_statement -> PRINT LPAREN ID RPAREN NEWLINE .

    FOR             reduce using rule 27 (print_statement -> PRINT LPAREN ID RPAREN NEWLINE .)
    WHILE           reduce using rule 27 (print_statement -> PRINT LPAREN ID RPAREN NEWLINE .)
    PRINT           reduce using rule 27 (print_statement -> PRINT LPAREN ID RPAREN NEWLINE .)
    ID              reduce using rule 27 (print_statement -> PRINT LPAREN ID RPAREN NEWLINE .)
    $end            reduce using rule 27 (print_statement -> PRINT LPAREN ID RPAREN NEWLINE .)
    RBRACKET        reduce using rule 27 (print_statement -> PRINT LPAREN ID RPAREN NEWLINE .)


state 53

    (28) print_statement -> PRINT LPAREN STRING RPAREN NEWLINE .

    FOR             reduce using rule 28 (print_statement -> PRINT LPAREN STRING RPAREN NEWLINE .)
    WHILE           reduce using rule 28 (print_statement -> PRINT LPAREN STRING RPAREN NEWLINE .)
    PRINT           reduce using rule 28 (print_statement -> PRINT LPAREN STRING RPAREN NEWLINE .)
    ID              reduce using rule 28 (print_statement -> PRINT LPAREN STRING RPAREN NEWLINE .)
    $end            reduce using rule 28 (print_statement -> PRINT LPAREN STRING RPAREN NEWLINE .)
    RBRACKET        reduce using rule 28 (print_statement -> PRINT LPAREN STRING RPAREN NEWLINE .)


state 54

    (22) for_statement -> FOR INT ID IN RANGE LPAREN . NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> FOR INT ID IN RANGE LPAREN . NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE

    NUMBER          shift and go to state 58


state 55

    (24) for_statement -> FOR INT ID LBRACKET NEWLINE statement_list . RBRACKET NEWLINE
    (3) statement_list -> statement_list . statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    RBRACKET        shift and go to state 59
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    statement                      shift and go to state 12
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 56

    (25) while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE . statement_list RBRACKET NEWLINE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    statement_list                 shift and go to state 60
    statement                      shift and go to state 3
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 57

    (26) while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE . statement_list RBRACKET NEWLINE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    statement_list                 shift and go to state 61
    statement                      shift and go to state 3
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 58

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER . COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER . COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE

    COMMA           shift and go to state 62


state 59

    (24) for_statement -> FOR INT ID LBRACKET NEWLINE statement_list RBRACKET . NEWLINE

    NEWLINE         shift and go to state 63


state 60

    (25) while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list . RBRACKET NEWLINE
    (3) statement_list -> statement_list . statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    RBRACKET        shift and go to state 64
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    statement                      shift and go to state 12
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 61

    (26) while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list . RBRACKET NEWLINE
    (3) statement_list -> statement_list . statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    RBRACKET        shift and go to state 65
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    statement                      shift and go to state 12
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 62

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA . NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA . NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE

    NUMBER          shift and go to state 66


state 63

    (24) for_statement -> FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE .

    FOR             reduce using rule 24 (for_statement -> FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    WHILE           reduce using rule 24 (for_statement -> FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    PRINT           reduce using rule 24 (for_statement -> FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    ID              reduce using rule 24 (for_statement -> FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    $end            reduce using rule 24 (for_statement -> FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    RBRACKET        reduce using rule 24 (for_statement -> FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)


state 64

    (25) while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET . NEWLINE

    NEWLINE         shift and go to state 67


state 65

    (26) while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET . NEWLINE

    NEWLINE         shift and go to state 68


state 66

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER . COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER . RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE

    COMMA           shift and go to state 69
    RPAREN          shift and go to state 70


state 67

    (25) while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .

    FOR             reduce using rule 25 (while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    WHILE           reduce using rule 25 (while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    PRINT           reduce using rule 25 (while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    ID              reduce using rule 25 (while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    $end            reduce using rule 25 (while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    RBRACKET        reduce using rule 25 (while_statement -> WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)


state 68

    (26) while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .

    FOR             reduce using rule 26 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    WHILE           reduce using rule 26 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    PRINT           reduce using rule 26 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    ID              reduce using rule 26 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    $end            reduce using rule 26 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    RBRACKET        reduce using rule 26 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)


state 69

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA . NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    NUMBER          shift and go to state 71


state 70

    (23) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN . LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE

    LBRACKET        shift and go to state 72


state 71

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER . RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    RPAREN          shift and go to state 73


state 72

    (23) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET . NEWLINE assignment_statement RBRACKET NEWLINE

    NEWLINE         shift and go to state 74


state 73

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN . LBRACKET NEWLINE statement_list RBRACKET NEWLINE

    LBRACKET        shift and go to state 75


state 74

    (23) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE . assignment_statement RBRACKET NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    ID              shift and go to state 9

    assignment_statement           shift and go to state 76

state 75

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET . NEWLINE statement_list RBRACKET NEWLINE

    NEWLINE         shift and go to state 77


state 76

    (23) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement . RBRACKET NEWLINE

    RBRACKET        shift and go to state 78


state 77

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE . statement_list RBRACKET NEWLINE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    statement_list                 shift and go to state 79
    statement                      shift and go to state 3
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 78

    (23) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET . NEWLINE

    NEWLINE         shift and go to state 80


state 79

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list . RBRACKET NEWLINE
    (3) statement_list -> statement_list . statement
    (4) statement -> . for_statement
    (5) statement -> . while_statement
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement
    (22) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (23) for_statement -> . FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE
    (24) for_statement -> . FOR INT ID LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (25) while_statement -> . WHILE LPAREN condition RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (26) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE
    (27) print_statement -> . PRINT LPAREN ID RPAREN NEWLINE
    (28) print_statement -> . PRINT LPAREN STRING RPAREN NEWLINE
    (8) assignment_statement -> . ID EQUALS condition NEWLINE

    RBRACKET        shift and go to state 81
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9

    statement                      shift and go to state 12
    for_statement                  shift and go to state 4
    while_statement                shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7

state 80

    (23) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE .

    FOR             reduce using rule 23 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE .)
    WHILE           reduce using rule 23 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE .)
    PRINT           reduce using rule 23 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE .)
    ID              reduce using rule 23 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE .)
    $end            reduce using rule 23 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE .)
    RBRACKET        reduce using rule 23 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE assignment_statement RBRACKET NEWLINE .)


state 81

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET . NEWLINE

    NEWLINE         shift and go to state 82


state 82

    (22) for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .

    FOR             reduce using rule 22 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    WHILE           reduce using rule 22 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    PRINT           reduce using rule 22 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    ID              reduce using rule 22 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    $end            reduce using rule 22 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)
    RBRACKET        reduce using rule 22 (for_statement -> FOR INT ID IN RANGE LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN LBRACKET NEWLINE statement_list RBRACKET NEWLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 18 resolved as shift
WARNING: shift/reduce conflict for GT in state 18 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 18 resolved as shift
WARNING: shift/reduce conflict for MATHEQUALS in state 18 resolved as shift
WARNING: shift/reduce conflict for DIF in state 18 resolved as shift
WARNING: shift/reduce conflict for AND in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 47 resolved as shift
