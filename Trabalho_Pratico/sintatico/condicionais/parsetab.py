
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND DIF ELSE EQUALS FLOAT FNUMBER GT ID IF INT LBRACKET LPAREN LT MATHEQUALS NEWLINE NUMBER OR PRINT RBRACKET RPAREN STR STRINGprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : declaration\n                 | print_statement\n                 | conditional_statementdeclaration : type ID EQUALS expression NEWLINEconditional_statement : IF LPAREN condition RPAREN LBRACKET NEWLINE print_statement RBRACKET NEWLINE\n                             | IF LPAREN condition RPAREN LBRACKET NEWLINE print_statement RBRACKET ELSE LBRACKET NEWLINE print_statement RBRACKET NEWLINEprint_statement : PRINT LPAREN ID RPAREN NEWLINE\n                       | PRINT LPAREN STRING RPAREN NEWLINEcondition : expression comparator expression\n                 | expression comparator expression AND condition\n                 | expression comparator expression OR conditioncomparator : GT\n                  | LT\n                  | DIF\n                  | MATHEQUALStype : INT\n            | FLOAT\n            | STRexpression : NUMBER\n                  | FNUMBER\n                  | STRING\n                  | ID'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,13,35,36,37,40,47,50,53,],[8,8,-2,-4,-5,-6,-3,-7,-10,-11,8,-8,8,-9,]),'IF':([0,2,3,4,5,6,13,35,36,37,47,53,],[9,9,-2,-4,-5,-6,-3,-7,-10,-11,-8,-9,]),'INT':([0,2,3,4,5,6,13,35,36,37,47,53,],[10,10,-2,-4,-5,-6,-3,-7,-10,-11,-8,-9,]),'FLOAT':([0,2,3,4,5,6,13,35,36,37,47,53,],[11,11,-2,-4,-5,-6,-3,-7,-10,-11,-8,-9,]),'STR':([0,2,3,4,5,6,13,35,36,37,47,53,],[12,12,-2,-4,-5,-6,-3,-7,-10,-11,-8,-9,]),'$end':([1,2,3,4,5,6,13,35,36,37,47,53,],[0,-1,-2,-4,-5,-6,-3,-7,-10,-11,-8,-9,]),'ID':([7,10,11,12,15,16,17,30,31,32,33,34,41,42,],[14,-19,-20,-21,18,25,25,25,-15,-16,-17,-18,25,25,]),'LPAREN':([8,9,],[15,16,]),'EQUALS':([14,],[17,]),'STRING':([15,16,17,30,31,32,33,34,41,42,],[19,24,24,24,-15,-16,-17,-18,24,24,]),'NUMBER':([16,17,30,31,32,33,34,41,42,],[22,22,22,-15,-16,-17,-18,22,22,]),'FNUMBER':([16,17,30,31,32,33,34,41,42,],[23,23,23,-15,-16,-17,-18,23,23,]),'RPAREN':([18,19,20,22,23,24,25,39,44,45,],[27,28,29,-22,-23,-24,-25,-12,-13,-14,]),'GT':([21,22,23,24,25,],[31,-22,-23,-24,-25,]),'LT':([21,22,23,24,25,],[32,-22,-23,-24,-25,]),'DIF':([21,22,23,24,25,],[33,-22,-23,-24,-25,]),'MATHEQUALS':([21,22,23,24,25,],[34,-22,-23,-24,-25,]),'NEWLINE':([22,23,24,25,26,27,28,38,46,49,52,],[-22,-23,-24,-25,35,36,37,40,47,50,53,]),'AND':([22,23,24,25,39,],[-22,-23,-24,-25,41,]),'OR':([22,23,24,25,39,],[-22,-23,-24,-25,42,]),'LBRACKET':([29,48,],[38,49,]),'RBRACKET':([36,37,43,51,],[-10,-11,46,52,]),'ELSE':([46,],[48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'statement':([0,2,],[3,13,]),'declaration':([0,2,],[4,4,]),'print_statement':([0,2,40,50,],[5,5,43,51,]),'conditional_statement':([0,2,],[6,6,]),'type':([0,2,],[7,7,]),'condition':([16,41,42,],[20,44,45,]),'expression':([16,17,30,41,42,],[21,26,39,21,21,]),'comparator':([21,],[30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','condicionais.py',7),
  ('statement_list -> statement','statement_list',1,'p_statement_list','condicionais.py',11),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','condicionais.py',12),
  ('statement -> declaration','statement',1,'p_statement','condicionais.py',19),
  ('statement -> print_statement','statement',1,'p_statement','condicionais.py',20),
  ('statement -> conditional_statement','statement',1,'p_statement','condicionais.py',21),
  ('declaration -> type ID EQUALS expression NEWLINE','declaration',5,'p_declaration','condicionais.py',25),
  ('conditional_statement -> IF LPAREN condition RPAREN LBRACKET NEWLINE print_statement RBRACKET NEWLINE','conditional_statement',9,'p_conditional_statement','condicionais.py',29),
  ('conditional_statement -> IF LPAREN condition RPAREN LBRACKET NEWLINE print_statement RBRACKET ELSE LBRACKET NEWLINE print_statement RBRACKET NEWLINE','conditional_statement',14,'p_conditional_statement','condicionais.py',30),
  ('print_statement -> PRINT LPAREN ID RPAREN NEWLINE','print_statement',5,'p_print_statement','condicionais.py',38),
  ('print_statement -> PRINT LPAREN STRING RPAREN NEWLINE','print_statement',5,'p_print_statement','condicionais.py',39),
  ('condition -> expression comparator expression','condition',3,'p_condition','condicionais.py',46),
  ('condition -> expression comparator expression AND condition','condition',5,'p_condition','condicionais.py',47),
  ('condition -> expression comparator expression OR condition','condition',5,'p_condition','condicionais.py',48),
  ('comparator -> GT','comparator',1,'p_comparator','condicionais.py',55),
  ('comparator -> LT','comparator',1,'p_comparator','condicionais.py',56),
  ('comparator -> DIF','comparator',1,'p_comparator','condicionais.py',57),
  ('comparator -> MATHEQUALS','comparator',1,'p_comparator','condicionais.py',58),
  ('type -> INT','type',1,'p_type','condicionais.py',62),
  ('type -> FLOAT','type',1,'p_type','condicionais.py',63),
  ('type -> STR','type',1,'p_type','condicionais.py',64),
  ('expression -> NUMBER','expression',1,'p_expression','condicionais.py',68),
  ('expression -> FNUMBER','expression',1,'p_expression','condicionais.py',69),
  ('expression -> STRING','expression',1,'p_expression','condicionais.py',70),
  ('expression -> ID','expression',1,'p_expression','condicionais.py',71),
]
